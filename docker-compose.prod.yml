version: '3.8'

services:
  app:
    image: ghcr.io/noronetwork/ppv-streaming:main
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_ENV=production
      - DB_HOST=mysql
      - DB_NAME=ppv_streaming
      - DB_USER=ppv_user
      - DB_PASS=${DB_PASSWORD:-change_this_password}
      - REDIS_HOST=redis
      - MEDIAMTX_API_URL=http://mediamtx:9997/v3
      - JWT_SECRET=${JWT_SECRET:-change_this_jwt_secret_to_64_chars_minimum}
      - APP_SECRET=${APP_SECRET:-change_this_app_secret_to_64_chars_minimum}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-sk_test_your_stripe_key}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY:-pk_test_your_stripe_key}
    volumes:
      - app_storage:/var/www/html/storage
      - app_uploads:/var/www/html/public/uploads
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ppv-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password_change_this}
      MYSQL_DATABASE: ppv_streaming
      MYSQL_USER: ppv_user
      MYSQL_PASSWORD: ${DB_PASSWORD:-change_this_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 80s
    restart: unless-stopped
    networks:
      - ppv-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10
      interval: 30s
    restart: unless-stopped
    networks:
      - ppv-network

  mediamtx:
    image: bluenviron/mediamtx:latest
    ports:
      - "1935:1935"  # RTMP
      - "8888:8888"  # HLS
      - "9997:9997"  # API
    volumes:
      - ./docker/mediamtx.yml:/mediamtx.yml
      - mediamtx_recordings:/recordings
    environment:
      - MTX_LOGLEVEL=info
    restart: unless-stopped
    networks:
      - ppv-network

volumes:
  mysql_data:
  redis_data:
  mediamtx_recordings:
  app_storage:
  app_uploads:

networks:
  ppv-network:
    driver: bridge